<Window x:Class="UIAutomation.Views.LittleHelperWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:prism="http://prismlibrary.com/"           
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:converter="clr-namespace:UIAutomation.Converter"
             prism:ViewModelLocator.AutoWireViewModel="True" 
             AllowsTransparency="True" 
             MouseLeftButtonDown="Window_MouseLeftButtonDown" 
             WindowStyle="None" Background="Transparent" 
             Width="75" Height="75"  Left="{Binding WindowLeft}" 
             ShowInTaskbar="False" Topmost="True" Top="50" >
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="MouseDoubleClick">
            <i:InvokeCommandAction Command="{Binding MouseDoubleCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <converter:VisibilityConverter x:Key="VisibilityConverter"/>
        <converter:ReverseVisibilityConverter x:Key="ReverseVisibilityConverter"/> 
    </Window.Resources>
    <Border BorderThickness="0" CornerRadius="50" Background="#FFFBFCFF">
        <Canvas>
            <Button Width="30" Visibility="{Binding IsStartWorker,Converter={StaticResource ReverseVisibilityConverter},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Height="30" Canvas.Top="22" Canvas.Left="22">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command="{Binding MouseDoubleCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Button.Template>
                    <ControlTemplate>
                        <Image x:Name="ImgLogo" Width="30" Source="/UIAutomation;component/Resources/Images/Ico/logo.ico"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ImgLogo" Property="Opacity" Value="0.7"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
            </Button>
            <Button Width="75" Height="75"  Visibility="{Binding IsStartWorker,Converter={StaticResource VisibilityConverter},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                <Button.Template>
                    <ControlTemplate>
                        <Canvas>
                            <hc:CircleProgressBar x:Name="CPBInfo" Value="{Binding CircleProgressBarValue}" ArcThickness="2"  FontSize="20" Width="75" Height="75" Margin="0,0,0,0" >
                               
                            </hc:CircleProgressBar>
                            <Button x:Name="BtnPause" Command="{Binding PauseCommand}"  Width="75" Height="75" Cursor="Hand" Visibility="Hidden">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDoubleClick">
                                        <i:InvokeCommandAction Command="{Binding MouseDoubleCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Button.Template>
                                    <ControlTemplate>
                                        <Image x:Name="ImgLogo" Width="75" Height="75" Opacity="0.8" Source="/UIAutomation;component/Resources/Images/Png/pause_red1.png"/> 
                                    </ControlTemplate>
                                </Button.Template>
                            </Button> 
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="CPBInfo" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="BtnPause" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
            </Button> 
        </Canvas>
    </Border>
</Window>
